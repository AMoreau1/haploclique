#! /usr/bin/env sh
function assemble() {
    function alignMemPaired () {
        bwa index -a bwtsw $2 2> /dev/null > /dev/null
        bwa mem -t 79 $2 $1 $3 > aln.sam 2> /dev/null
        samtools faidx $2 2> /dev/null
        samtools view -q 20 -F 4 -bt $2.fai aln.sam > aln.bam  2> /dev/null
        samtools sort aln.bam reads  2> /dev/null
        rm aln*  
        samtools view -uf 1 reads.bam > paired.bam 2> /dev/null
        samtools view -uF 1 reads.bam > single_1.bam 2> /dev/null
        rm reads.bam 
    }
    function alignMemSingle () {
        bwa index -a bwtsw $2  2> /dev/null > /dev/null
        bwa mem -t 79 $2 $1 > aln.sam 2> /dev/null
        samtools faidx $2 2> /dev/null
        samtools view -q 20 -F 4 -bt $2.fai aln.sam > aln.bam 2> /dev/null
        samtools sort aln.bam single_2 2> /dev/null
        rm aln* 
    }

    alignMemPaired $FORWARD $1 $BACKWARD

    if [ -s $SINGLE ]; then
        alignMemSingle $SINGLE $1
        samtools merge single.bam single_1.bam single_2.bam 2> /dev/null
    else
        mv single_1.bam single.bam
    fi

    samtools merge reads_unsorted.bam single.bam paired.bam 2> /dev/null
    samtools sort reads_unsorted.bam assembly 2> /dev/null
    samtools index assembly.bam 2> /dev/null

    java -jar $SAF/SequenceAlignmentFixer.jar -i assembly.bam 2> /dev/null > /dev/null

    rm -rf assembly*

    samtools sort -n single.bam single_sort 2> /dev/null
    samtools view single_sort.bam > single_sort.sam 2> /dev/null
    samtools view paired.bam > paired.sam 2> /dev/null

    touch paired.priors single.priors
    if [ -s paired.sam ]; then
        bam-to-alignment-priors $1 paired.bam > paired.priors 2> /dev/null
    fi
    if [ -s single_sort.sam ]; then
        bam-to-alignment-priors --unsorted --single-end $1 single_sort.bam > single.priors  2> /dev/null
    fi
    if [ -s data_clique_to_reads.tsv ]; then
        cat paired.priors single.priors  | sort -k6,6 -g | manipulate_alignment_prior.py data_clique_to_reads.tsv > alignment.prior 2> /dev/null
    else
        cat paired.priors single.priors skipped.priors | sort -k6,6 -g > alignment.prior 2> /dev/null
    fi
    rm *sam *bam *.priors

    if [ ! -s iteration ]; then
        echo "1" > iteration;
    else
        awk '{ print  $1+1}' iteration > iteration_tmp;
        mv iteration_tmp iteration;
    fi

    haploclique -A support/allel_distribution_phred_weighted.txt -c $HC -s $HS -q $HQ -o $HO -a < alignment.prior > data_clique.fastq;
    haploclique-postprocess.py < data_clique.fastq
    rm -rf data_clique.fastq support

    sed -i -e '/^$/d;s/@Clique1/@Clique/g' data_cliques_paired_R1.fastq
    sed -i -e '/^$/d;s/@Clique2/@Clique/g' data_cliques_paired_R2.fastq
    awk 'BEGIN {FS=""} {if (NR%4 == 2) { for (i = NF; i >= 1; i = i - 1) { if ($i == "A") { printf "T"; } else if ($i == "C") { printf "G";} else if ($i == "G") { printf "C";} else if ($i == "T") { printf "A";} else if ($i == "N") { printf "N";} } print ""; } else print $0 }' data_cliques_paired_R2.fastq > tmp.fastq
    rm data_cliques_paired_R2.fastq
    mv tmp.fastq data_cliques_paired_R2.fastq
    sed -i -e '/^$/d;s/@Clique1/@Clique/g' data_cliques_single.fastq
    rm -rf *-e

    cat data_cliques_* | awk '{if (NR%4==2) { l += length($0);i++}} END {printf("Mean read length:\t%.0f bp\n",l/i)}'
    cat data_cliques_s* | awk 'BEGIN {l = 0} {if (NR%4==2 && l < length($0)) l = length($0)} END {printf("Max read length:\t%.0f bp\n",l)}'
}

samtools view -uf 1 $2 > paired.bam 2> /dev/null
samtools view -uF 1 $2 > single.bam 2> /dev/null
echo "`date +%H:%M:%S` Computing prior start"
java -jar $SAF/SequenceAlignmentFixer.jar -i $2
echo "`date +%H:%M:%S` Computing prior done"
samtools sort -n single.bam single_sort 2> /dev/null
samtools view single_sort.bam > single_sort.sam 2> /dev/null
samtools view paired.bam > paired.sam 2> /dev/null

touch paired.priors single.priors
if [ -s paired.sam ]; then 
	bam-to-alignment-priors $1 paired.bam > paired.priors 
fi
if [ -s single_sort.sam ]; then 
	bam-to-alignment-priors --unsorted --single-end $1 single_sort.bam > single.priors 
fi
if [ -s data_clique_to_reads.tsv ]; then 
	cat paired.priors single.priors  | sort -k6,6 -g | manipulate_alignment_prior.py data_clique_to_reads.tsv > alignment.prior 
else 
	cat paired.priors single.priors  | sort -k6,6 -g > alignment.prior; 
fi
rm *sam *bam *.priors

if [ $# -lt 5 ]; then
	HQ=0.95
	HO=0.6
	HS=5
	HC=1000
else
	HQ=$3
	HO=$4
	HS=$5
	HC=$6
fi

haploclique -A support/allel_distribution_phred_weighted.txt -c $HC -s $HS -q $HQ -o $HO -a < alignment.prior > data_clique.fastq;

haploclique-postprocess.py < data_clique.fastq
rm -rf data_clique.fastq support

sed -i -e '/^$/d;s/@Clique1/@Clique/g' data_cliques_paired_R1.fastq
sed -i -e '/^$/d;s/@Clique2/@Clique/g' data_cliques_paired_R2.fastq
awk 'BEGIN {FS=""} {if (NR%4 == 2) { for (i = NF; i >= 1; i = i - 1) { if ($i == "A") { printf "T"; } else if ($i == "C") { printf "G";} else if ($i == "G") { printf "C";} else if ($i == "T") { printf "A";} else if ($i == "N") { printf "N";} } print ""; } else print $0 }' data_cliques_paired_R2.fastq > tmp.fastq
rm data_cliques_paired_R2.fastq
mv tmp.fastq data_cliques_paired_R2.fastq
sed -i -e '/^$/d;s/@Clique1/@Clique/g' data_cliques_single.fastq
rm -rf *-e

#while [ -s clipped.prior ]
#do

#done

#/Users/toepfera/Dropbox/references/hxb2.fasta

#if [ -s single_sort.sam ]; then bam-to-alignment-priors --unsorted --single-end /Users/toepfera/Dropbox/references/hxb2.fasta single_sort.bam > single.priors; fi